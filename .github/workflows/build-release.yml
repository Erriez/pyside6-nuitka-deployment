name: PySide6 application build and release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install Linux system dependencies
        run: |
          # APT update
          sudo apt update

          # Install Pyside6 system dependencies
          # https://doc.qt.io/qt-6/linux-requirements.html
          sudo apt install -y \
            libfontconfig1-dev \
            libfreetype6-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libatspi2.0-dev \
            '^libxcb.*-dev'

          # Install Nuitka dependencies
          sudo apt install -y ccache clang patchelf

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Setup virtualenv
        run: |
          pip install -r requirements.txt

      - name: Build Linux executable
        if: runner.os == 'Linux'
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          output-dir: .
          output-file: erriez-pyside6-app
          include-data-dir: images=images
          standalone: true
          onefile: true
          enable-plugins: pyside6
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux Build
          if-no-files-found: error
          path: |
            LICENSE
            erriez-pyside6-app

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Setup virtualenv
        run: |
          pip install -r requirements.txt

      - name: Build Windows executable
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          output-dir: .
          output-file: erriez-pyside6-app.exe
          include-data-dir: images=images
          standalone: true
          onefile: true
          disable-console: true
          windows-icon-from-ico: images/app.ico
          enable-plugins: pyside6

      - name: Create Windows NSIS installer
        uses: joncloud/makensis-action@v4

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows Build
          if-no-files-found: error
          path: |
            LICENSE
            erriez-pyside6-app.exe
            erriez-pyside6-app-setup.exe

  release:
    name: "Create Github release"
    needs: [ build-linux, build-windows ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Download and extract artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: |
          ls -R

      - name: Add files to Github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            LICENSE
            ${{ github.workspace }}/artifacts/Linux Build/erriez-pyside6-app
            ${{ github.workspace }}/artifacts/Windows Build/erriez-pyside6-app.exe
            ${{ github.workspace }}/artifacts/Windows Build/erriez-pyside6-app-setup.exe

      - name: Set GitHub release description
        uses: Roang-zero1/github-create-release-action@v3
        with:
          update_existing: true
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
