name: Create PySide6 exe with Nuitka-Action

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          # APT update
          sudo apt update

          # Install Pyside6 system dependencies
          # https://doc.qt.io/qt-6/linux-requirements.html
          sudo apt install -y \
            libfontconfig1-dev \
            libfreetype6-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxrender-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libatspi2.0-dev \
            '^libxcb.*-dev'

          # Install Nuitka dependencies
          sudo apt install -y ccache clang patchelf

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable Linux
        if: runner.os == 'Linux'
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          output-file: pyside6-app
          include-data-dir: images=images
          standalone: true
          onefile: true
          enable-plugins: pyside6

      - name: Build Executable Windows
        if: runner.os == 'Windows'
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          output-file: pyside6-app.exe
          include-data-dir: images=images
          standalone: true
          onefile: true
          disable-console: true
          windows-icon-from-ico: images/app.ico
          enable-plugins: pyside6

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: |
            build/pyside6-app
            build/pyside6-app.exe

